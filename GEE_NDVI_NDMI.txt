// Define time ranges for wet and dry seasons for the year of interest
var wetSeasonStart = '2022-04-01';
var wetSeasonEnd = '2022-06-30';
var drySeasonStart = '2022-07-01';
var drySeasonEnd = '2022-09-30';

// Load the Sentinel-2 ImageCollection for the defined time range and ROI
var sentinelData = ee.ImageCollection('COPERNICUS/S2_SR')
                      .filterBounds(table)
                      .filterDate(wetSeasonStart, drySeasonEnd)
                      .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20));

// Function to calculate NDVI
function addNDVI(image) {
  return image.addBands(image.normalizedDifference(['B8', 'B4']).rename('NDVI'));
}

// Function to calculate NDMI
function addNDMI(image) {
  return image.addBands(image.normalizedDifference(['B8', 'B11']).rename('NDMI'));
}

// Calculate NDVI and NDMI for the entire period
var withIndices = sentinelData.map(addNDVI).map(addNDMI);

// Calculate seasonal averages
var wetSeason = withIndices.filterDate(wetSeasonStart, wetSeasonEnd).mean().clip(table);
var drySeason = withIndices.filterDate(drySeasonStart, drySeasonEnd).mean().clip(table);

// Calculate seasonal differences for NDVI and NDMI
var ndviDifference = drySeason.select('NDVI').subtract(wetSeason.select('NDVI')).rename('NDVI_Difference').clip(table);
var ndmiDifference = drySeason.select('NDMI').subtract(wetSeason.select('NDMI')).rename('NDMI_Difference').clip(table);

// Classify the drought severity based on NDVI difference
var droughtSeverity = ndviDifference.expression(
  "(b('NDVI_Difference') < -0.1) ? 3" +
  ": (b('NDVI_Difference') >= -0.1 && b('NDVI_Difference') < 0) ? 2" +
  ": 1"
).rename('Drought_Severity').clip(table);

// Set visualization parameters
var visParams = {min: 1, max: 3, palette: ['green', 'yellow', 'red']}; // 1: No Drought, 2: Moderate, 3: Severe

// Add the drought severity layer to the map
Map.centerObject(table, 6);
Map.addLayer(droughtSeverity, visParams, 'Drought Severity');

// Optionally, export the result
Export.image.toDrive({
  image: droughtSeverity,
  description: 'Drought_Severity_Map',
  scale: 10,
  region: table,
  fileFormat: 'GeoTIFF'
});
